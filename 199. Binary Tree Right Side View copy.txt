/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
var rightSideView = function(root) {
    if(!root) return []
    //do BFS and when last ele of queue store it
    let queue = [root]
    let res = []

    while(queue.length){
        let level = queue.length;
        res.push(queue[level-1].val);
        for(let i=0;i<level;i++){
            let currNode = queue.shift();
            if(currNode.left)queue.push(currNode.left);
            if(currNode.right)queue.push(currNode.right);
        }
    }
    return res
}; 
