/**
 * @param {string} s
 * @param {string} t
 * @return {string}
 */
var minWindow = function(s, t) {

    if(!t.length) return "";
    
    // Create a hashMap to store the frequency of characters in the string t;
    let tFreq = {}
    for(let c of t){
        tFreq[c] = (tFreq[c] || 0) + 1
    };

    let res = "";
    let resLength = Infinity;
    let currWindow = {}

    let l = 0;
    let need = Object.keys(tFreq).length;
    let have = 0;
    for(let r = 0; r < s.length; r++){
        let c = s[r];
        currWindow[c] = (currWindow[c] || 0) + 1;

        //update have when freq >= existing character
        if(c in currWindow && currWindow[c] == tFreq[c]) have++;

        while(have === need){
            //check if length is smaller than the exisiting result
            if(r-l+1 < resLength){
                res = s.substring(l,r+1);
                resLength = res.length;
            }
            currWindow[s[l]]--;
            // if(window[s[l]] == 0) delete window[s[l]];
            if(s[l] in tFreq && currWindow[s[l]] < tFreq[s[l]]) have--;
            l++;
        }

    }
    return res;
}; 
