/**
 * @param {character[][]} grid
 * @return {number}
 */
var numIslands = function(grid) {

    if(!grid.length) return 0;
    
    let visited = new Set();
    let row = grid.length;
    let col = grid[0].length
    let islands = 0;

    function validRange(x,y){
        if((x >= 0 && x < row) && (y >= 0 && y < col)){
            return true
        }
        return false
    }

    function bfs(i,j){
        let q = []
        q.push([i,j])
        visited.add(JSON.stringify([i,j]))
        let directions = [[-1,0], [1,0], [0,-1], [0,1]];
        while(q.length){
            let [x1,y1] = q.shift();
            for(let [dx,dy] of directions){
                let dx1 = x1+dx;
                let dy1 = y1+dy;
                let J = JSON.stringify([dx1,dy1])
                if(validRange(dx1,dy1) && grid[dx1][dy1] === '1' && !visited.has(J)){
                    visited.add(J);
                    q.push([dx1, dy1])
                }
            }

        }
    }

    for(let i=0; i<row; i++){
        for(let j=0; j<col; j++){
            if(grid[i][j] === '1' && !visited.has(JSON.stringify([i,j]))){
                bfs(i,j)
                islands++;
            }
        }
    }

    return islands;
};