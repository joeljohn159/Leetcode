/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxDepth = function(root) {
    if(!root) return 0;
    let max = 1;

    function DFS(node, depth){
        if(!node.left && !node.right){
            if(depth > max){
                max = depth;
            }
            return
        }
        if(node.left){
            DFS(node.left, depth+1)
            
        }
        if(node.right){
            DFS(node.right, depth+1)
        }
    }

    DFS(root, max);

    return max
};