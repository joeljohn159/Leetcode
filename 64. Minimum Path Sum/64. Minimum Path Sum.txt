/**
 * @param {number[][]} grid
 * @return {number}
 */
var minPathSum = function(grid) {
    let rows = grid.length;
    let cols = grid[0].length;

    let DParr = Array.from({length: rows}, ()=>new Array(cols).fill(0))

    //Base case fillers
    let temp = 0
    for(let i=0; i<cols; i++){
        temp+= grid[0][i];
        DParr[0][i] = temp;
    }

    temp = 0
    for(let i=0; i<rows; i++){
        temp+= grid[i][0];
        DParr[i][0] = temp;
    }
    // console.log(DParr)



    //Check Min Sum
    for(let i=1; i<rows; i++){
        for(let j=1; j<cols; j++){
            // console.log(grid[i][j] + DParr[i-1][j], grid[i][j] +grid[i][j-1])
            DParr[i][j] = Math.min(grid[i][j] + DParr[i-1][j], grid[i][j] +DParr[i][j-1] )
        }
    }

    return DParr[rows-1][cols-1]
};