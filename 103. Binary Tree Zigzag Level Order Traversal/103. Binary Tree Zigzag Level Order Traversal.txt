/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var zigzagLevelOrder = function(root) {
    //when odd reverse order
    //when 0 or even straignt order
    if(!root) return []
    let res = []
    let queue = [root]
    let level = 0

    while(queue.length){
        let levelLength = queue.length;
        let temp = []
        for(i=0; i<levelLength; i++){
                let node = queue.shift()
                temp.push(node.val)
                if(node.left)queue.push(node.left)
                if(node.right)queue.push(node.right)
        }
        if(level%2 == 0){
            res.push(temp)
        }else{
             res.push(temp.reverse())
        }
        level++;
    }
    return res
};