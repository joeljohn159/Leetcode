
var TimeMap = function() {
    this.hashMap = new Map();
};

/** 
 * @param {string} key 
 * @param {string} value 
 * @param {number} timestamp
 * @return {void}
 */
TimeMap.prototype.set = function(key, value, timestamp) {
    if(!this.hashMap.has(key)){
        this.hashMap.set(key, [])
    }

    this.hashMap.get(key).push([value, timestamp])
    // this.hashMap.set(key, [...(this.hashMap.get(key) || []), [value, timestamp]])
};

/** 
 * @param {string} key 
 * @param {number} timestamp
 * @return {string}
 */
TimeMap.prototype.get = function(key, timestamp) {
    if(!this.hashMap.has(key)) return ""
    let x = this.hashMap.get(key);
    let res = ""

    let left = 0, right = x.length-1;
    while(left <= right){
        let mid = Math.floor((left+right)/2);
        if(x[mid][1] <= timestamp){
            res = x[mid][0];
            left = mid+1
        }else{
            right = mid-1
        }
    }
    return res

};

/** 
 * Your TimeMap object will be instantiated and called as such:
 * var obj = new TimeMap()
 * obj.set(key,value,timestamp)
 * var param_2 = obj.get(key,timestamp)
 */