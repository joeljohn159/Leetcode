/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxPathSum = function(root) {
        if(!root) return 0;
        let res = root.val
        function dfs(node){
            if(!node) return 0;
            let leftMax = dfs(node.left);
            let rightMax = dfs(node.right);4
            leftMax = Math.max(leftMax, 0);
            rightMax = Math.max(rightMax,0)

            //splited
            res = Math.max(res, node.val + leftMax +rightMax)

            //return max path
            return node.val + Math.max(leftMax, rightMax)
        }

        dfs(root)
        return res



};