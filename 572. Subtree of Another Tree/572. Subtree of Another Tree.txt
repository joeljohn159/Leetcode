/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {TreeNode} subRoot
 * @return {boolean}
 */
var isSubtree = function(root, subRoot) {
        function same(curr, sample){
            if(!curr && !sample){
                return true
            }
            if((!curr && sample) || (curr && !sample)){
                return false
            }
            if(curr.val !== sample.val){
                return false;
            }
            return (same(curr.left, sample.left) && same(curr.right, sample.right))
        }


        function checker(curr){
            if(!curr) return false;
            if(same(curr, subRoot)) return true
            return checker(curr.left, subRoot) || checker(curr.right, subRoot)
        }

        return checker(root)



};