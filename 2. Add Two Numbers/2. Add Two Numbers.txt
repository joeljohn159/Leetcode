/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function (l1, l2) {
    let l1Pointer = l1;
    let l2Pointer = l2;
    let carry = 0;
    let dummy = new ListNode();
    let curr = dummy;
    while (l2Pointer || l1Pointer) {
        let sum = (l1Pointer?.val || 0) + (l2Pointer?.val || 0) + carry;
        carry = Math.floor(sum / 10);
        let digit1 = sum % 10
        
        curr.next = new ListNode(digit1);
        curr = curr.next;
        l1Pointer = l1Pointer?.next != null ? l1Pointer.next : null;
        l2Pointer = l2Pointer?.next != null ? l2Pointer.next : null;
        
    }

    if(carry > 0){
        curr.next = new ListNode(carry)
    }
    // console.log(dummy.next)

    return dummy.next




};