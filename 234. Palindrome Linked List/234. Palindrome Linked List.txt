/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {boolean}
 */
var isPalindrome = function (head) {

    //Create a sring of values and check if rever matches

    // let res = ''

    // while(head){
    //     res += String(head.val)
    //     head = head.next
    // }

    // stringReverse = res.split('').reverse().join('')
    // // console.log(res, stringReverse)

    // if(res === stringReverse){
    //     return true
    // }

    // return false



    let fast = head;
    let slow = head;

    while (fast && fast.next) {
        fast = fast.next.next
        slow =slow.next
    }

    //reverse 2nd half
    let prev = null
    while(slow){
        let temp = slow.next
        slow.next = prev
        prev = slow
        slow = temp
    }

    //check
    while(prev){
        if(head.val !== prev.val){
            return false
        }
        prev = prev.next
        head = head.next
    }

    return true

};